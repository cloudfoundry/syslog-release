#!/bin/bash
set -ex

LOGDIR=/var/vcap/sys/log/syslog_forwarder

mkdir -p ${LOGDIR}
chown -R root:root ${LOGDIR}
chmod 0755 ${LOGDIR}

mkdir -p /var/vcap/data/syslog_forwarder/buffered
chown -R syslog:adm /var/vcap/data/syslog_forwarder/buffered

mkdir -p /etc/rsyslog.d

# This cleans up after legacy config locations and previous starts
rm -f /etc/rsyslog.d/rsyslog.conf /etc/rsyslog.d/*-syslog-release*conf

if [ -d "/etc/apparmor.d/rsyslog.d/" ]; then
  cp $(dirname $0)/../config/syslog.apparmor /etc/apparmor.d/rsyslog.d/syslog.apparmor

  if command -v apparmor_parser &>/dev/null && [ -f "/etc/apparmor.d/usr.sbin.rsyslogd" ]; then
    apparmor_parser -r /etc/apparmor.d/usr.sbin.rsyslogd
  fi
fi

<% unless p('syslog.migration.disabled') %>

cp $(dirname $0)/../config/syslog-release.conf /etc/rsyslog.d/20-syslog-release.conf
chmod 0644 /etc/rsyslog.d/20-syslog-release.conf

cp $(dirname $0)/../config/syslog-release-forwarding-setup.conf /etc/rsyslog.d/25-syslog-release-forwarding-setup.conf
chmod 0644 /etc/rsyslog.d/25-syslog-release-forwarding-setup.conf

cp $(dirname $0)/../config/syslog-release-custom-rules.conf /etc/rsyslog.d/30-syslog-release-custom-rules.conf
chmod 0644 /etc/rsyslog.d/30-syslog-release-custom-rules.conf

# check if custom configuration is valid
rsyslogd -N1 || (echo 'Custom rule configuration invalid' && exit 1)

cp $(dirname $0)/../config/syslog-release-vcap-filter.conf /etc/rsyslog.d/32-syslog-release-vcap-filter.conf
chmod 0644 /etc/rsyslog.d/32-syslog-release-vcap-filter.conf

cp $(dirname $0)/../config/syslog-release-debug-filter.conf /etc/rsyslog.d/33-syslog-release-debug-filter.conf
chmod 0644 /etc/rsyslog.d/33-syslog-release-debug-filter.conf

cp $(dirname $0)/../config/syslog-release-forwarding-rules.conf /etc/rsyslog.d/35-syslog-release-forwarding-rules.conf
chmod 0644 /etc/rsyslog.d/35-syslog-release-forwarding-rules.conf

cp $(dirname $0)/../config/syslog-release-file-exclusion.conf /etc/rsyslog.d/40-syslog-release-file-exclusion.conf
chmod 0644 /etc/rsyslog.d/40-syslog-release-file-exclusion.conf

<% end %>

# Restart rsyslog: try systemctl first; if it fails (e.g., systemctl missing,
# service not managed by systemd, or VM partially stopped), fall back to
# the traditional service command. This ensures rsyslog starts reliably
# across BOSH Lite, stopped VMs, or environments with partial systemd support.
echo "Restarting rsyslog..."
systemctl restart rsyslog 2>/dev/null || {
  echo "systemctl restart failed, falling back to service..."
  service rsyslog restart || echo "fallback restart also failed."
}
