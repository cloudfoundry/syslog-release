$MaxMessageSize <%= p('syslog.max_message_size') %>
$WorkDirectory /var/vcap/data/syslog_storer/buffered # where messages should be buffered on disk

# Forward vcap messages to the aggregator
#
$ActionResumeRetryCount -1              # Try until the server becomes available
$ActionQueueType LinkedList             # Allocate on-demand
$ActionQueueFileName agg_backlog        # Spill to disk if queue is full
$ActionQueueMaxDiskSpace 32m            # Max size for disk queue
$ActionQueueLowWaterMark 2000           # Num messages. Assuming avg size of 512B, this is 1MiB.
$ActionQueueHighWaterMark 8000          # Num messages. Assuming avg size of 512B, this is 4MiB. (If this is reached, messages will spill to disk until the low watermark is reached).
$ActionQueueTimeoutEnqueue 0            # Discard messages if the queue + disk is full
$ActionQueueSaveOnShutdown on           # Save in-memory data to disk if rsyslog shuts down

template(name="SyslogStorerTemplate" type="list") {
  property(name="rawmsg")
  constant(value="\n")
}

<%= p('syslog.custom_rule') %>

<% if_p('syslog.port', 'syslog.transport') do |port, transport| %>

# Keep filtered programname in sync with syslog_event_forwarder.rb
    <% if transport == 'relp' %>
# Listen for logs over RELP
$ModLoad imrelp
$InputRELPServerRun <%= port %>

    <% elsif transport == 'udp' %>
# Listen for logs over UDP
$ModLoad imudp
$UDPServerRun <%= port %>

    <% elsif transport == 'tcp' %>
# Listen for logs over TCP
$ModLoad imtcp
$InputTCPMaxSessions 500
<% if_p('syslog.tls.ca', 'syslog.tls.certificate', 'syslog.tls.ca') do %>
$DefaultNetstreamDriver gtls
$DefaultNetstreamDriverCAFile /var/vcap/jobs/syslog_storer/config/ca.pem
$DefaultNetstreamDriverCertFile /var/vcap/jobs/syslog_storer/config/syslog-storer.crt
$DefaultNetstreamDriverKeyFile /var/vcap/jobs/syslog_storer/config/syslog-storer.key
$InputTCPServerStreamDriverMode 1
$InputTCPServerStreamDriverAuthMode anon
<% end %>
$InputTCPServerRun <%= port %>
    <% else %>
        <% raise 'only RELP, UDP, and TCP are supported' %>
    <% end %>
<% end  %>
$DirCreateMode 0700
$FileCreateMode 0644
*.* /var/vcap/store/syslog_storer/syslog.log;SyslogStorerTemplate

# Prevent them from reaching anywhere else
:programname, startswith, "vcap." stop
